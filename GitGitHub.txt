* GIT - Version control system it manages multiple versions of source code history.
      TO track changes in files/folders
      To collaborate in teams. 
      Free and open-source system.

* GITHUB - Website to upload repositories online. 
         That lets you manage git repo.
         provides backup.
         makes collaboration easier.
         GitHub is designed to help you better manage them.

* GIT != GITHUB (Are not Equal).

* To add your github email and name to your git. (Before doing [git init] should enter details in terminal, it will register in git)
    --git config --global user.email "raob9668@gmail.com". 
    --git config --global user.name "MyGitHubName".

* git init (It creates an empty repo).

* Add file/folders to git - tracking.

  --mkdir MyFolder
  --cd MyFolder
  --git init

* To see hidden folder like .git.

  --ls -la
  --ls .git

* git status(In Terminal).

* touch MyFile.txt(In Terminal).

* git status(It will track the created files).
            (It will indicate as red color).

* git add MyFile.txt (It will add and tracked but it is not commited).
                    (It will indicate as green color).

* git commit -m "added MyFile.txt" (To commit the changes).
* git status (There wont be a files anymore, becoz it's commited).
* git restore MyFile.txt (To discard changes inside a file).
* git add *.txt or *.* or . (It will add all the files at a time).

* To add github repo(created repo file) to git by copying a https link by using a below cmd.

   --git remote add origin https://gitgub.com/DareToDeep-Bhaskar/Repo1.git (Connection will established between github and git).

   --git push origin master(Whatever the files in git that will push to github).
   --git log (To see the info aboutpus the files).  


* What is Branches ? [Whatever the changes you are doing inside the file will go to the branch].
 
   --Allow you to work on different parts of a project without impacting the main branch.
   --When the work is complete, a branch can be merged with the main project.
   --You can even switch between branches and work on different projects without them interfering with each other.
   --Branching in Git is very lightweight and fast!

* To create a branch.

   --git branch MyBranch.
 
* To checkout the branch as we created previous.

   --git checkout MyBranch (Switched to branch 'MyBranch'), --git checkout master (Switch to master).
   --touch File3.txt (The file you created in Branch, it will display only in branch, but not master)
   --git add File3.txt .
   --git commit -m File3.txt
   --git status
   --git push -u origin MyBranch (It will move all the files to branch),(Checkout in GitHub[Branches]). 
   --git merge MyBranch (The file you created in branch it will move to master).
                        (Can do manually also by doing it to GitHub).
   --git branch -d MyBranch (It will delete in local terminal not in github).
   --git push origin --delete MyBranch (The branch will delete in GitHub).

* To add email to GitHub ?

   --setting-integration-add email(click on notification).
   --create a file in git then it will trigger in email).
* To delete a file in git and github.

   --git rm "FileName"
   --git commit -m "FileName" 
   --git push origin master 

* To create a Tag

   --git tag MyTag
   --git tag (To visible the created tags)
   --git show MyTag (It shows the details of particular tag)

* How to push tags to GitHub

   --git push origin MyTag
   --git push --tags (To push all tags to github)
   --git tag --delete MyTag (It will delete in local but not in GitHub)
   --git push origin -d MyTag (It will delete in GitHub)   
   --git log (You will see 40 digit checksum number, when you commit the ssh num will change)
             (It is unique checksum number)
             (Generated by SHA)

* We cannot checkout tags in git.
* We can create a branch from a tag and checkout the branch.

   --git checkout -b <branchname> <tagname>

* How to move files from branch to master [Important]
   --git checkout <branch-name>
   --touch f1.txt
   --git add .
   --git commit -m f1.txt
   --git status
   --git push -u origin <branch-name> [Top commands we should do in branch]

   --git checkout master
   --git merge <branch-name>
   --git  push -u origin master [What ever the files are in branch it will move to master]
   
* How to connect eclipse project to GitHub Repo.

  --Eclipse Project-Project(RightClick)-Teams-ShareProject-Commit and Push.

* Github actions yaml to print hello world. Ref[https://gist.github.com/weibeld/f136048d0a82aacc063f42e684e3c494].

  --Go to GitHub-Actions-Click on Setup workflow yourself.
  --Copy the YAML Code and paste it on console.
  --Start Commit.
  --Click On actions-create main.yml-myjob.
  --Click On Setup job.
  --Click On my-step.
  --Click On Complete Job.
  --Then re-run all jobs.


* GitClone -  git clone is used for just downloading exactly what is currently working on the remote server repository and saving it in your machine's folder where that project is placed
   
          Ex: git clone [githuburl]











                       
